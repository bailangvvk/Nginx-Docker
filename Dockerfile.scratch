# 第一阶段：构建环境，编译所有依赖和 Nginx
FROM alpine:3.20 AS builder

# 安装编译所有组件所需的依赖
RUN apk add --no-cache \
    build-base \
    wget \
    perl \
    linux-headers

# 定义所有组件的版本，方便统一管理和更新
ARG NGINX_VERSION=1.26.1
ARG OPENSSL_VERSION=3.3.1
ARG ZLIB_VERSION=1.3.1
ARG PCRE2_VERSION=10.44

# 设置工作目录
WORKDIR /usr/src

# --- 编译所有依赖 (zlib, pcre2, openssl) ---
# (为了简洁，这里省略了详细的编译步骤，假设它们都已成功)
RUN wget --no-check-certificate http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz && tar -zxvf zlib-${ZLIB_VERSION}.tar.gz && cd zlib-${ZLIB_VERSION} && ./configure --static && make
WORKDIR /usr/src
RUN wget --no-check-certificate https://github.com/PCRE2Project/pcre2/releases/download/pcre2-${PCRE2_VERSION}/pcre2-${PCRE2_VERSION}.tar.gz && tar -zxf pcre2-${PCRE2_VERSION}.tar.gz && cd pcre2-${PCRE2_VERSION} && ./configure --disable-shared --enable-static && make
WORKDIR /usr/src
RUN wget --no-check-certificate https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && tar -zxvf openssl-${OPENSSL_VERSION}.tar.gz && cd openssl-${OPENSSL_VERSION} && ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl no-shared no-threads && make && make install_sw

# 4. 编译 Nginx
WORKDIR /usr/src
RUN wget --no-check-certificate http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
    tar -zxvf nginx-${NGINX_VERSION}.tar.gz
WORKDIR /usr/src/nginx-${NGINX_VERSION}
# --- 关键改动 1：移除日志路径配置，让 make install 使用默认值 ---
RUN ./configure \
        --prefix=/etc/nginx \
        --sbin-path=/usr/sbin/nginx \
        --conf-path=/etc/nginx/nginx.conf \
        --pid-path=/var/run/nginx.pid \
        --lock-path=/var/run/nginx.lock \
        --user=nginx \
        --group=nginx \
        --http-client-body-temp-path=/var/cache/nginx/client_temp \
        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
        --with-http_ssl_module \
        --with-http_v2_module \
        --with-stream \
        --with-stream_ssl_module \
        --with-pcre-jit \
        --with-zlib=/usr/src/zlib-${ZLIB_VERSION} \
        --with-pcre=/usr/src/pcre2-${PCRE2_VERSION} \
        --with-openssl=/usr/src/openssl-${OPENSSL_VERSION} \
        --with-cc-opt="-O2" \
        --with-ld-opt="-static" && \
    make
 
# --- 关键改动：手动创建安装目录并复制文件，取代 make install ---
RUN mkdir -p /tmp/install/usr/sbin && \
    # 复制编译好的 Nginx 二进制文件
    cp objs/nginx /tmp/install/usr/sbin/nginx && \
    # 创建配置文件目录
    mkdir -p /tmp/install/etc/nginx && \
    # 复制默认的配置文件
    cp conf/nginx.conf /tmp/install/etc/nginx/nginx.conf.default && \
    cp conf/mime.types /tmp/install/etc/nginx/mime.types.default && \
    cp conf/fastcgi_params /tmp/install/etc/nginx/fastcgi_params.default && \
    # 复制一份我们将要修改的配置文件
    cp conf/nginx.conf /tmp/install/etc/nginx/nginx.conf && \
    cp conf/mime.types /tmp/install/etc/nginx/mime.types && \
    cp conf/fastcgi_params /tmp/install/etc/nginx/fastcgi_params && \
    # 创建默认的 html 目录和文件
    mkdir -p /tmp/install/etc/nginx/html && \
    cp html/index.html /tmp/install/etc/nginx/html/index.html && \
    cp html/50x.html /tmp/install/etc/nginx/html/50x.html && \
    # 创建非特权用户和组的文件
    echo "nginx:x:101:101:nginx:/var/cache/nginx:/sbin/nologin" > /tmp/install/etc/passwd && \
    echo "nginx:x:101:" > /tmp/install/etc/group && \
    # 创建 Nginx 运行时所需的目录
    mkdir -p /tmp/install/var/cache/nginx && \
    mkdir -p /tmp/install/var/run && \
    # 赋予正确的权限
    chown -R 101:101 /tmp/install/var/cache/nginx && \
    chown -R 101:101 /tmp/install/var/run && \
    # 修改配置文件以适应容器化运行
    sed -i 's/worker_processes  1;/worker_processes  auto;/' /tmp/install/etc/nginx/nginx.conf && \
    sed -i '/^http {/a \    daemon off;' /tmp/install/etc/nginx/nginx.conf && \
    sed -i 's|access_log  logs/access.log;|access_log /dev/stdout;|g' /tmp/install/etc/nginx/nginx.conf && \
    sed -i 's|error_log  logs/error.log;|error_log /dev/stderr;|g' /tmp/install/etc/nginx/nginx.conf && \
    # 修正默认配置文件中 html 目录的路径
    sed -i 's|root   html;|root   /etc/nginx/html;|g' /tmp/install/etc/nginx/nginx.conf
 
 
# 第二阶段：最终镜像 (基于 scratch)
FROM scratch
 
# 复制在构建器中准备好的所有文件
COPY --from=builder /tmp/install/ /
 
# 切换到非特权用户
USER nginx
 
# 暴露端口
EXPOSE 80 443
 
# 启动 Nginx
CMD ["/usr/sbin/nginx", "-c", "/etc/nginx/nginx.conf"]
