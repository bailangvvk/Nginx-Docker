# =================================================================
# Dockerfile.scratch (运行时修正版)
# =================================================================

# --- Stage 1: builder ---
FROM alpine:latest AS builder

WORKDIR /tmp

RUN set -eux && \
    \
    # --- 1. 安装依赖 ---
    apk add --no-cache \
        build-base \
        curl \
        perl \
        sed \
        grep \
        tar \
        bash \
        linux-headers && \
    \
    # --- 2. 获取版本号 ---
    NGINX_VERSION=$(curl -s https://nginx.org/en/download.html | grep -oE 'nginx-[0-9]+\.[0-9]+\.[0-9]+' | head -n1 | cut -d'-' -f2) && \
    OPENSSL_VERSION=$(wget -q -O - https://www.openssl.org/source/ | grep -oE 'openssl-[0-9]+\.[0-9]+\.[0-9]+' | head -n1 | cut -d'-' -f2) && \
    ZLIB_VERSION=$(curl -s https://zlib.net/ | grep -oE 'zlib-[0-9]+\.[0-9]+\.[0-9]+' | head -n1 | cut -d'-' -f2) && \
    PCRE_VERSION=$(curl -sL https://sourceforge.net/projects/pcre/files/pcre/ | grep -oE 'pcre-[0-9]+\.[0-9]+' | cut -d'-' -f2 | sort -Vr | head -n1) && \
    \
    # --- 3. 下载源码 ---
    curl -fSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx.tar.gz && \
    curl -fSL https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz -o openssl.tar.gz && \
    curl -fSL https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz -o zlib.tar.gz && \
    curl -fSL https://downloads.sourceforge.net/project/pcre/pcre/${PCRE_VERSION}/pcre-${PCRE_VERSION}.tar.gz -o pcre.tar.gz && \
    \
    # --- 4. 解压源码 ---
    tar xzf nginx.tar.gz && \
    tar xzf openssl.tar.gz && \
    tar xzf zlib.tar.gz && \
    tar xzf pcre.tar.gz && \
    \
    # --- 5. 编译 Nginx ---
    cd nginx-${NGINX_VERSION} && \
    ./configure \
        --prefix=/etc/nginx \
        --user=nginx \
        --group=nginx \
        --with-compat \
        --with-threads \
        --with-http_ssl_module \
        --with-http_v2_module \
        --with-http_gzip_static_module \
        --with-http_stub_status_module \
        --with-pcre-jit \
        --with-pcre=../pcre-${PCRE_VERSION} \
        --with-zlib=../zlib-${ZLIB_VERSION} \
        --with-openssl=../openssl-${OPENSSL_VERSION} \
        --with-ld-opt="-static" && \
    make -j$(nproc) && \
    make install && \
    strip /etc/nginx/sbin/nginx && \
    \
    # --- 6. 创建用户和组 ---
    echo "nginx:x:101:101:nginx:/var/cache/nginx:/sbin/nologin" >> /etc/passwd && \
    echo "nginx:x:101:" >> /etc/group && \
    \
    # --- 7. 【关键修正】创建 Nginx 运行时所需的所有目录 ---
    mkdir -p \
      /var/cache/nginx/client_body_temp \
      /var/cache/nginx/proxy_temp \
      /var/cache/nginx/fastcgi_temp \
      /var/cache/nginx/uwsgi_temp \
      /var/cache/nginx/scgi_temp \
      /var/log/nginx && \
    \
    # --- 8. 【关键修正】为这些目录设置正确的权限 ---
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx


# --- Stage 2: final ---
FROM scratch

LABEL maintainer="bailangvvking"

# 【关键修正】使用 --chown 标志复制文件和目录，确保属主正确
COPY --from=builder --chown=nginx:nginx /etc/nginx/sbin/nginx /usr/sbin/nginx
COPY --from=builder --chown=nginx:nginx /etc/nginx/conf /etc/nginx/conf
COPY --from=builder --chown=nginx:nginx /etc/nginx/html /etc/nginx/html
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

# 【关键修正】复制所有运行时需要的目录，并保持权限
COPY --from=builder --chown=nginx:nginx /var/cache/nginx /var/cache/nginx
COPY --from=builder --chown=nginx:nginx /var/log/nginx /var/log/nginx

# 暴露端口
EXPOSE 80 443

# 指定 Nginx 以非 root 用户运行
USER nginx

# 定义容器启动命令
# 同时，我们将 Nginx 的 error_log 和 pid 指向我们创建并授权过的目录
CMD ["/usr/sbin/nginx", "-g", "daemon off; error_log /var/log/nginx/error.log; pid /var/log/nginx/nginx.pid;"]
