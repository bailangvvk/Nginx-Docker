# =================================================================
# Dockerfile.busybox (使用 BusyBox 作为基础镜像)
# =================================================================

# --- Stage 1: builder ---
# builder 阶段和之前的 alpine dynamic build 完全一样
# 它提供了一个完整的编译环境
FROM alpine:latest AS builder

WORKDIR /tmp

RUN set -eux && \
    apk add --no-cache \
    build-base \
    curl \
    perl \
    sed \
    grep \
    tar \
    bash \
    git \
    zlib-dev \
    pcre2-dev \
    openssl-dev \
    zstd-dev \
    linux-headers && \
    NGINX_VERSION=$(curl -s https://nginx.org/en/download.html | grep -oE 'nginx-[0-9]+\.[0-9]+\.[0-9]+' | head -n1 | cut -d'-' -f2) && \
    curl -fSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx.tar.gz && \
    git clone --depth=1 https://github.com/openresty/echo-nginx-module.git && \
    tar xzf nginx.tar.gz && \
    cd nginx-${NGINX_VERSION} && \
    ./configure \
        --prefix=/etc/nginx \
        --sbin-path=/usr/sbin/nginx \
        --modules-path=/etc/nginx/modules \
        --add-dynamic-module=../echo-nginx-module && \
    make -j$(nproc) modules && \
    make -j$(nproc) && \
    make install

# --- Stage 2: final ---
### 核心变化: 基础镜像从 alpine 变为 busybox ###
# 我们选择 busybox:musl 是因为它使用的 C 库 (musl) 与我们 builder (alpine) 使用的相同
FROM busybox:musl

LABEL maintainer="bailangvvking"

# --- 1. 创建用户、组和目录 ---
# 使用 busybox 提供的命令
RUN addgroup -S -g 101 nginx && \
    adduser -S -D -H -u 101 -G nginx nginx && \
    mkdir -p /var/cache/nginx /var/log/nginx /etc/nginx/modules && \
    chown -R nginx:nginx /var/cache/nginx /var/log/nginx /etc/nginx

# --- 2. 复制编译好的文件和所有依赖 ---
COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
COPY --from=builder /etc/nginx/nginx.conf /etc/nginx/nginx.conf
COPY --from=builder /etc/nginx/mime.types /etc/nginx/mime.types
COPY --from=builder /etc/nginx/html /etc/nginx/html
COPY --from=builder /tmp/nginx-*/objs/ngx_http_echo_module.so /etc/nginx/modules/

### 核心痛点: 手动复制所有 .so 依赖 ###
# 这些依赖是在 builder 阶段通过 ldd /usr/sbin/nginx 命令找到的
COPY --from=builder /lib/ld-musl-x86_64.so.1 /lib/
COPY --from=builder /usr/lib/libpcre2-8.so.0 /usr/lib/
COPY --from=builder /lib/libz.so.1 /lib/
COPY --from=builder /usr/lib/libssl.so.3 /usr/lib/
COPY --from=builder /usr/lib/libcrypto.so.3 /usr/lib/

# --- 3. 配置 Nginx 以加载模块 ---
RUN sed -i '1i load_module modules/ngx_http_echo_module.so;' /etc/nginx/nginx.conf

# 暴露端口
EXPOSE 80 443

# 指定 Nginx 以非 root 用户运行
USER nginx

# 定义容器启动命令
CMD ["/usr/sbin/nginx", "-g", "daemon off;"]
